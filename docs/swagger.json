{
    "swagger": "2.0",
    "info": {
        "description": "This is prototype of aquafarm management service",
        "title": "Aquafarm Management Service",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/v1/endpoints/reports": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get reports for each endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endpoints"
                ],
                "summary": "Get reports for each endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.EndpointLogReportResponseMap"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/farms": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all farms with pagination and filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farms"
                ],
                "summary": "Get all paginated farms",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Current Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Count of farms each page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the sorts key of farms sortation",
                        "name": "sorts",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the farms search by code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the farms search by village",
                        "name": "village",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the farms search by district",
                        "name": "district",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the farms search by city",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the farms search by province",
                        "name": "province",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the farms search by postal code",
                        "name": "postalCode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "time",
                        "description": "the farm created date is filtered greather than or equal created date start",
                        "name": "createdDateStart",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "time",
                        "description": "the farm created date is filtered less than or equal created date end",
                        "name": "createdDateEnd",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.FarmPagingResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create new farm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farms"
                ],
                "summary": "Create new farm",
                "parameters": [
                    {
                        "description": "Farm Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateFarmRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.FarmResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/farms/{code}": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the farm if farm is exist or insert if farm is not exist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farms"
                ],
                "summary": "Update or insert farm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Farm Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Farm Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpsertFarmBodyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.FarmResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/farms/{farmID}/ponds": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create new pond",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ponds"
                ],
                "summary": "Create new pond",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "farmID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Pond Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePondRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PondResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/farms/{farmID}/ponds/{code}": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the pond if pond is exist or insert if pond is not exist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ponds"
                ],
                "summary": "Update or insert pond",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "farmID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pond Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Pond Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpsertPondRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PondResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/farms/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get farm data by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farms"
                ],
                "summary": "Get farm data by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.FarmResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete farm by id and ponds connected to farm id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farms"
                ],
                "summary": "Delete farm by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/ponds": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all ponds with pagination and filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ponds"
                ],
                "summary": "Get all paginated ponds",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Current Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Count of ponds each page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the sorts key of ponds sortation",
                        "name": "sorts",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the ponds search by code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "time",
                        "description": "the pond created date is filtered greather than or equal created date start",
                        "name": "createdDateStart",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "time",
                        "description": "the pond created date is filtered less than or equal created date end",
                        "name": "createdDateEnd",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PondPagingResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create new pond",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ponds"
                ],
                "summary": "Create new pond",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "farmID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Pond Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePondRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PondResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/ponds/{code}": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the pond if pond is exist or insert if pond is not exist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ponds"
                ],
                "summary": "Update or insert pond",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "farmID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pond Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Pond Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpsertPondRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PondResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/ponds/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get pond data by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ponds"
                ],
                "summary": "Get pond data by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pond ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PondResponse"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete pond by id and ponds connected to pond id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ponds"
                ],
                "summary": "Delete pond by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pond ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Success"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/generateResp.Error"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {},
                                        "message": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateFarmRequest": {
            "type": "object",
            "required": [
                "address",
                "city",
                "code",
                "description",
                "district",
                "loginData",
                "postalCode",
                "province",
                "village"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "loginData": {},
                "longitude": {
                    "type": "number"
                },
                "postalCode": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "village": {
                    "type": "string"
                }
            }
        },
        "dto.CreatePondRequest": {
            "type": "object",
            "required": [
                "code",
                "depth",
                "description",
                "loginData",
                "long",
                "wide"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "depth": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "farmCode": {
                    "type": "string"
                },
                "farmId": {
                    "type": "integer"
                },
                "loginData": {},
                "long": {
                    "type": "number"
                },
                "wide": {
                    "type": "number"
                }
            }
        },
        "dto.EndpointLogReportResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "request_time_average": {
                    "type": "number"
                },
                "unique_ip_address": {
                    "type": "integer"
                },
                "unique_user_agent": {
                    "type": "integer"
                }
            }
        },
        "dto.EndpointLogReportResponseMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/dto.EndpointLogReportResponse"
            }
        },
        "dto.FarmPagingResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "currentPage": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FarmResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "sorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "dto.FarmResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "ponds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PondResponse"
                    }
                },
                "postalCode": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "village": {
                    "type": "string"
                }
            }
        },
        "dto.PondPagingResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "currentPage": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PondResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "sorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "dto.PondResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "depth": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "farm": {
                    "$ref": "#/definitions/dto.FarmResponse"
                },
                "farmId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "long": {
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "wide": {
                    "type": "number"
                }
            }
        },
        "dto.UpsertFarmBodyRequest": {
            "type": "object",
            "required": [
                "address",
                "city",
                "description",
                "district",
                "postalCode",
                "province",
                "village"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "postalCode": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "village": {
                    "type": "string"
                }
            }
        },
        "dto.UpsertPondRequest": {
            "type": "object",
            "required": [
                "code",
                "depth",
                "description",
                "loginData",
                "long",
                "wide"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "depth": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "farmCode": {
                    "type": "string"
                },
                "farmId": {
                    "type": "integer"
                },
                "loginData": {},
                "long": {
                    "type": "number"
                },
                "wide": {
                    "type": "number"
                }
            }
        },
        "generateResp.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "generateResp.Success": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}